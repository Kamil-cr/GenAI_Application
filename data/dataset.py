from transformers import GPT2LMHeadModel, GPT2Tokenizer
import json

# Load pre-trained model and tokenizer
model_name = "gpt2"
tokenizer = GPT2Tokenizer.from_pretrained(model_name)
model = GPT2LMHeadModel.from_pretrained(model_name)

# Function to generate Q&A pairs
def generate_qna(question):
    input_text = f"Q: {question}\nA:"
    input_ids = tokenizer.encode(input_text, return_tensors="pt")

    # Generate response using the language model
    output_ids = model[0].generate(input_ids, max_length=256, num_return_sequences=1)

    # Decode and return the generated answer
    answer = tokenizer.decode(output_ids[0], skip_special_tokens=True).strip()
    return {"question": question, "answer": answer}

# Common Python programming questions
python_questions = [
    "How do I read a file in Python?",
    "What is a dictionary in Python?",
    "How do I handle exceptions in Python?",
    "Explain list comprehensions in Python.",
    "How to install external libraries in Python?",
    "What is the difference between '==' and 'is' in Python?",
    "How to write a function in Python?",
    "What is the purpose of the `__init__` method in a class?",
    "How to use the 'with' statement in Python?",
    "What are Python decorators?",
    "What is Python?",
    "How do you install Python on your machine?",
    "What are the differences between Python 2 and Python 3?",
    "How do you check the Python version in your system?",
    "Explain Python's garbage collection mechanism.",
    "How does Python handle memory management?",
    "What is PEP 8, and why is it important?",
    "Describe the role of the Global Interpreter Lock (GIL) in Python.",
    "What is a virtual environment in Python?",
    "How do you create a virtual environment using `virtualenv`?",
    "Explain the purpose of `pip` in Python.",
    "What is a Python package?",
    "How can you upgrade a package using `pip`?",
    "Differentiate between a list and a tuple in Python.",
    "Explain the concept of mutability in Python.",
    "How do you convert a string to an integer in Python?",
    "What is the purpose of the `__init__.py` file in a Python package?",
    "Explain the use of `__main__` in Python scripts.",
    "What is the purpose of the `if __name__ == '__main__':` block?",
    "Describe the purpose of the `__doc__` attribute in Python.",
    "How do you comment out multiple lines in Python?",
    "What is the purpose of docstrings in Python?",
    "Explain the difference between `==` and `is` in Python.",
    "What are Python decorators, and how do you use them?",
    "How do you open and read a file in Python?",
    "Explain the purpose of the `with` statement in file handling.",
    "How do you write to a file in Python?",
    "What is the purpose of the `os` module in Python?",
    "Explain the use of the `shutil` module in Python.",
    "How do you check if a file or directory exists in Python?",
    "What is the purpose of the `try`, `except`, and `finally` blocks in Python?",
    "How do you raise custom exceptions in Python?",
    "Explain the purpose of the `assert` statement in Python.",
    "What is the purpose of the `pass` statement in Python?",
    "How do you handle exceptions in a clean and robust way?",
    "Describe the purpose of the `logging` module in Python.",
    "How do you create a list in Python?",
    "Explain list comprehensions in Python.",
    "What is the difference between `append()` and `extend()` in Python lists?",
    "How do you reverse a list in Python?",
    "Explain the purpose of the `range()` function in Python.",
    "How do you iterate over a dictionary in Python?",
    "What are lambda functions, and how are they used?",
    "Describe the purpose of the `map()` function in Python.",
    "Explain the use of the `filter()` function in Python.",
    "How do you sort a list in Python?",
    "What is the purpose of the `sorted()` function?",
    "Describe the difference between `sort()` and `sorted()` in Python.",
    "How do you remove duplicates from a list in Python?",
    "Explain the purpose of the `set()` data type in Python.",
    "How do you create a dictionary in Python?",
    "What is the purpose of the `get()` method in dictionaries?",
    "Describe the difference between `==` and `is` for dictionaries in Python.",
    "How do you merge two dictionaries in Python?",
    "Explain the purpose of the `items()` method in dictionaries.",
    "How do you create a tuple in Python?",
    "Describe the purpose of tuple unpacking.",
    "Explain the use of the `enumerate()` function in Python.",
    "How do you use the `zip()` function in Python?",
    "Describe the purpose of the `in` keyword in Python.",
    "How do you check if a key exists in a dictionary?",
    "Explain the purpose of the `del` statement in Python.",
    "What are list comprehensions, and how are they used?",
    "How do you create a generator in Python?",
    "Describe the purpose of the `yield` statement in Python.",
    "What is the purpose of the `next()` function with generators?",
    "How do you handle file input and output in Python?",
    "Explain the purpose of the `open()` function in Python.",
    "What is a context manager, and how do you use it in Python?",
    "How do you define and call a function in Python?",
    "Explain the concept of function arguments in Python.",
    "How do you use default arguments in a Python function?",
    "Describe the purpose of the `*args` and `**kwargs` in function parameters.",
    "What is a lambda function, and when is it useful?",
    "How do you return multiple values from a function in Python?",
    "Explain the purpose of the `global` keyword in Python.",
    "What is a closure in Python?",
    "How do you handle exceptions in Python?",
    "Describe the purpose of the `try`, `except`, `else`, and `finally` blocks.",
    "How do you raise custom exceptions in Python?",
    "Explain the purpose of the `assert` statement in Python.",
    "What is the purpose of the `__name__` variable in Python?",
    "How do you use the `__main__` block in Python scripts?",
    "What are decorators, and how do you use them in Python?",
    "Describe the purpose of the `@classmethod` decorator.",
    "Explain the use of the `@staticmethod` decorator in Python.",
    "How do you work with modules in Python?",
    "What is the purpose of the `__init__.py` file in a Python package?",
    "How do you import modules in Python?",
    "Explain the difference between `import module` and `from module import *`.",
    "What is a Python package, and how is it different from a module?",
    "How do you install external packages using `pip`?",
    "Describe the purpose of the `requirements.txt` file.",
    "What is the purpose of the `__init__.py` file in a Python package?",
    "Explain the difference between deep copy and shallow copy in Python.",
    "How do you use the `itertools` module in Python?",
    "Describe the purpose of the `collections` module in Python.",
    "How do you use the `Counter` class in Python?",
    "Explain the purpose of the `defaultdict` class in Python.",
    "What is the purpose of the `namedtuple` function in Python?",
    "Describe the purpose of the `heapq` module in Python.",
    "How do you use the `json` module in Python?",
    "Explain the purpose of the `loads()` and `dumps()` functions.",
    "How do you work with dates and times in Python?",
    "Describe the purpose of the `datetime` module.",
    "How do you format dates in Python?",
    "Explain the purpose of the `timedelta` class.",
    "How do you work with regular expressions in Python?",
    "Describe the purpose of the `re` module.",
    "How do you search for patterns using regular expressions in Python?",
    "Explain the purpose of the `__name__` variable in Python scripts.",
    "How do you use the `unittest` module for testing in Python?",
    "Describe the purpose of the `setUp()` and `tearDown()` methods in `unittest`.",
    "What is the purpose of the `assert` statement in testing?",
    "How do you test exceptions in Python using `unittest`?",
    "Explain the use of the `mock` library in Python testing.",
    "How do you use the `setUpClass()` and `tearDownClass()` methods in `unittest`?",
    "What is the purpose of the `setUpModule()` and `tearDownModule()` functions in `unittest`?",
    "How do you run specific tests using `unittest`?",
    "Describe the purpose of the `doctest` module in Python.",
    "How do you create and run doctests in Python?",
    "Explain the purpose of the `coverage` module in Python testing.",
    "What is the purpose of the `pylint` tool in Python?",
    "How do you install and use third-party libraries in Python?",
    "Describe the purpose of the `pipenv` tool in Python package management.",
    "How do you create and activate a virtual environment using `venv`?",
    "Explain the use of the `requirements.txt` file in Python projects.",
    "What is the purpose of the `setup.py` file in a Python package?",
     "How do you handle file input and output in Python?",
    "Explain the purpose of the `open()` function in Python.",
    "What is a context manager, and how do you use it in Python?",
    "How do you define and call a function in Python?",
    "Explain the concept of function arguments in Python.",
    "How do you use default arguments in a Python function?",
    "Describe the purpose of the `*args` and `**kwargs` in function parameters.",
    "What is a lambda function, and when is it useful?",
    "How do you return multiple values from a function in Python?",
    "Explain the purpose of the `global` keyword in Python.",
    "What is a closure in Python?",
    "How do you handle exceptions in Python?",
    "Describe the purpose of the `try`, `except`, `else`, and `finally` blocks.",
    "How do you raise custom exceptions in Python?",
    "Explain the purpose of the `assert` statement in Python.",
    "What is the purpose of the `pass` statement in Python?",
    "How do you handle exceptions in a clean and robust way?",
    "Describe the purpose of the `logging` module in Python.",
    "How do you create a list in Python?",
    "Explain list comprehensions in Python.",
    "What is the difference between `append()` and `extend()` in Python lists?",
    "How do you reverse a list in Python?",
    "Explain the purpose of the `range()` function in Python.",
    "How do you iterate over a dictionary in Python?",
    "What are lambda functions, and how are they used?",
    "Describe the purpose of the `map()` function in Python.",
    "Explain the use of the `filter()` function in Python.",
    "How do you sort a list in Python?",
    "What is the purpose of the `sorted()` function?",
    "Describe the difference between `sort()` and `sorted()` in Python.",
    "How do you remove duplicates from a list in Python?",
    "Explain the purpose of the `set()` data type in Python.",
    "How do you create a dictionary in Python?",
    "What is the purpose of the `get()` method in dictionaries?",
    "Describe the difference between `==` and `is` for dictionaries in Python.",
    "How do you merge two dictionaries in Python?",
    "Explain the purpose of the `items()` method in dictionaries.",
    "How do you create a tuple in Python?",
    "Describe the purpose of tuple unpacking.",
    "Explain the use of the `enumerate()` function in Python.",
    "How do you use the `zip()` function in Python?",
    "Describe the purpose of the `in` keyword in Python.",
    "How do you check if a key exists in a dictionary?",
    "Explain the purpose of the `del` statement in Python.",
    "What are list comprehensions, and how are they used?",
    "How do you create a generator in Python?",
    "Describe the purpose of the `yield` statement in Python.",
    "What is the purpose of the `next()` function with generators?",
    "How do you work with modules in Python?",
    "What is the purpose of the `__init__.py` file in a Python package?",
    "How do you import modules in Python?",
    "Explain the difference between `import module` and `from module import *`.",
    "What is a Python package, and how is it different from a module?",
    "How do you install external packages using `pip`?",
    "Describe the purpose of the `requirements.txt` file.",
    "What is the purpose of the `__init__.py` file in a Python package?",
    "Explain the difference between deep copy and shallow copy in Python.",
    "How do you use the `itertools` module in Python?",
    "Describe the purpose of the `collections` module in Python.",
    "How do you use the `Counter` class in Python?",
    "Explain the purpose of the `defaultdict` class in Python.",
    "What is the purpose of the `namedtuple` function in Python?",
    "Describe the purpose of the `heapq` module in Python.",
    "How do you use the `json` module in Python?",
    "Explain the purpose of the `loads()` and `dumps()` functions.",
    "How do you work with dates and times in Python?",
    "Describe the purpose of the `datetime` module.",
    "How do you format dates in Python?",
    "Explain the purpose of the `timedelta` class.",
    "How do you work with regular expressions in Python?",
    "Describe the purpose of the `re` module.",
    "How do you search for patterns using regular expressions in Python?",
    "Explain the purpose of the `__name__` variable in Python scripts.",
    "How do you use the `unittest` module for testing in Python?",
    "Describe the purpose of the `setUp()` and `tearDown()` methods in `unittest`.",
    "What is the purpose of the `assert` statement in testing?",
    "How do you test exceptions in Python using `unittest`?",
    "Explain the use of the `mock` library in Python testing.",
    "How do you use the `setUpClass()` and `tearDownClass()` methods in `unittest`?",
    "What is the purpose of the `setUpModule()` and `tearDownModule()` functions in `unittest`?",
    "How do you run specific tests using `unittest`?",
    "Describe the purpose of the `doctest` module in Python.",
    "How do you create and run doctests in Python?",
    "Explain the purpose of the `coverage` module in Python testing.",
    "What is the purpose of the `pylint` tool in Python?",
    "How do you install and use third-party libraries in Python?",
    "Describe the purpose of the `pipenv` tool in Python package management.",
    "How do you create and activate a virtual environment using `venv`?",
    "Explain the use of the `requirements.txt` file in Python projects.",
    "What is the purpose of the `setup.py` file in a Python package?"
]

# Generate Q&A pairs
dataset = [generate_qna(question) for question in python_questions]

# Save the dataset to a file
with open("python_qna_dataset.txt", "w") as file:
    for qa_pair in dataset:
        file.write(f"{qa_pair['question']}\t{qa_pair['answer']}\n")

# Example of using the generated dataset
for qa_pair in dataset[:5]:
    print(f"Q: {qa_pair['question']}\nA: {qa_pair['answer']}\n")